name: Update Flakes
on:
  schedule:
    - cron: "20 */6 * * *"
  workflow_dispatch:
jobs:
  niv-update:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        input:
          - flake-utils
          - nixpkgs
          - poetry2nix
          - pre-commit-hooks
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Nix
        uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable-small
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Setup Cachix
        uses: cachix/cachix-action@v10
        with:
          name: protoletariat
          extraPullNames: nix-community,poetry2nix

      - name: Get current commit
        id: get_current_commit
        uses: cpcloud/flake-dep-info-action@v1.1.0
        with:
          input: ${{ matrix.input }}

      - name: Update ${{ matrix.input }}
        run: nix flake lock --update-input ${{ matrix.input }}

      - name: Get new commit
        id: get_new_commit
        uses: cpcloud/flake-dep-info-action@v1.1.0
        with:
          input: ${{ matrix.input }}

      - name: Get commit details for ${{ matrix.input }} changes
        uses: cpcloud/compare-commits-action@v5.0.9
        id: compare_commits
        if: ${{ steps.get_current_commit.outputs.rev != steps.get_new_commit.outputs.rev }}
        with:
          owner: ${{ steps.get_current_commit.outputs.owner }}
          repo: ${{ steps.get_current_commit.outputs.repo }}
          basehead: ${{ steps.get_current_commit.outputs.rev }}...${{ steps.get_new_commit.outputs.rev }}
          token: ${{ secrets.GITHUB_TOKEN }}
          include-merge-commits: false

      - name: Generate a GitHub token
        uses: tibdex/github-app-token@v1
        if: ${{ steps.get_current_commit.outputs.rev != steps.get_new_commit.outputs.rev }}
        id: generate_token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Create a pull request to update ${{ matrix.input }}
        if: ${{ steps.get_current_commit.outputs.rev != steps.get_new_commit.outputs.rev }}
        id: create_pr
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: "chore(flake/${{ matrix.input }}): ${{ steps.get_current_commit.outputs.short-rev }} -> ${{ steps.get_new_commit.outputs.short-rev }}"
          branch: "create-pull-request/update-${{ matrix.input }}"
          delete-branch: true
          author: "Phillip Ground <cpcloudbot@gmail.com>"
          title: "chore(flake/${{ matrix.input }}): `${{ steps.get_current_commit.outputs.short-rev }}` -> `${{ steps.get_new_commit.outputs.short-rev }}`"
          token: ${{ steps.generate_token.outputs.token }}
          body: ${{ steps.compare_commits.outputs.differences }}
          labels: dependencies

      - name: Set the PR to automerge
        if: ${{ steps.create_pr.outputs.pull-request-operation == 'created' }}
        uses: peter-evans/enable-pull-request-automerge@v1
        with:
          token: ${{ steps.generate_token.outputs.token }}
          pull-request-number: ${{ steps.create_pr.outputs.pull-request-number }}
          merge-method: rebase
